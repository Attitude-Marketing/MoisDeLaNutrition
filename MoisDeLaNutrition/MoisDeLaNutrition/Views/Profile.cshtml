@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "_Master.cshtml";
    var pageNode = Model.Content;
    var bannerImg = pageNode.GetPropertyValue<IPublishedContent>("bannerImage");
    var bannerImgUrl = "";
    var bannerMobileImg = pageNode.GetPropertyValue<IPublishedContent>("bannerMobileImage");
    var bannerMobileImgUrl = "";
    var recipes = pageNode.GetPropertyValue<IEnumerable<IPublishedContent>>("recipes");
    var recipeCounter = 1;
    var factCounter = 1;
    var factPanels = pageNode.GetPropertyValue<IEnumerable<IPublishedContent>>("factPanels");
    var factPageAssoc = pageNode.GetPropertyValue<IPublishedContent>("factAssoc");
    var factPageAssocUrl = "";


    if(factPageAssoc != null)
    {
        factPageAssocUrl = factPageAssoc.Url;
    }

    if (bannerImg != null)
    {
        bannerImgUrl = bannerImg.Url;
    }

    if (bannerMobileImg != null)
    {
        bannerMobileImgUrl = bannerMobileImg.Url;
    }

    var factPageBtnIcon = "/images/icons/Icon_Articles_txt.svg";
    if (factPageAssoc != null)
    {
        if (!factPageAssoc.GetPropertyValue<string>("youtubeId").IsNullOrWhiteSpace())
        {
            factPageBtnIcon = "/images/icons/Icon_Articles_Vid.svg";
        }
    }

}
<section id="profile" class="@(pageNode.UrlName)">
    <div class="fluid">
        <div class="banner @pageNode.UrlName mobile-switch" style="background: url(@bannerImgUrl) center center no-repeat;" data-mobile="background: url(@bannerMobileImgUrl) center top no-repeat @(pageNode.GetPropertyValue<string>("profileColor")); background-size: contain;">
            <div class="row no-gutters">
                <div class="col-sm-10 offset-sm-1">
                    <div id="bannerInfo">
                        <h1 id="header-title" class="htitle">@Html.Raw(pageNode.GetPropertyValue<string>("pageTitle"))</h1>
                        <div id="introText">@(pageNode.GetPropertyValue<HtmlString>("pageText"))</div>
                    </div>
                </div>
            </div>
            @if (factPanels != null)
            {

                foreach (var fact in factPanels)
                {
                    var img = fact.GetPropertyValue<IPublishedContent>("factImage");
                    var imgUrl = "";

                    if (img != null)
                    {
                        imgUrl = img.Url;
                    }

                    var factPage = fact.GetPropertyValue<IPublishedContent>("factPage");
                    var factPageUrl = "";

                    if (factPage != null)
                    {
                        factPageUrl = factPage.Url;
                    }

                    <a id="factPanelBtn-@factCounter" class="bannerBtn quickFacts" href="#" data-fact="fact-@factCounter"><img src="~/images/icons/Icon_Tips.svg" class="bannerBtnIcon"><span class="bannerBtnStatement">@Html.Raw(fact.GetPropertyValue<string>("factStatement"))</span></a>
                    <div id="fact-@factCounter" class="factPanel">
                        <button class="btnClose"><img src="~/images/icons/close_panel_icon.svg" /></button>
                        <div class="panelImageWrap">
                            <img class="panelImage" src="@imgUrl" />
                        </div>
                        <div class="info">
                            <p class="factStatement">@(fact.GetPropertyValue<string>("factStatement"))</p>
                            <p class="factTitle">@(fact.GetPropertyValue<string>("factTitle"))</p>
                            <div class="factText">@(fact.GetPropertyValue<HtmlString>("factText"))</div>
                            @if (factPage != null)
                            {
                                <a href="@factPageUrl" class="globalCta">@(Umbraco.Field("#LearnMore"))<span class="globalCtaArrow"><svg xmlns="http://www.w3.org/2000/svg" width="21.715" height="12" viewBox="0 0 21.715 12"><path class="globalCtaArrowStyle" d="M504.7,357.685c0-.015-.009-.029-.013-.044a.464.464,0,0,0-.016-.052.488.488,0,0,0-.026-.049c-.007-.013-.013-.027-.021-.04a.529.529,0,0,0-.065-.079l-5.483-5.483a.517.517,0,1,0-.731.731l4.6,4.6H483.51a.517.517,0,0,0,0,1.034h19.434l-4.6,4.6a.517.517,0,1,0,.731.731l5.483-5.483a.53.53,0,0,0,.065-.079c.009-.013.014-.026.021-.04a.491.491,0,0,0,.026-.049.466.466,0,0,0,.016-.052c0-.015.01-.029.013-.044A.514.514,0,0,0,504.7,357.685Z" transform="translate(-482.993 -351.786)" /></svg></span></a>
                            }
                        </div>
                    </div>

                    factCounter++;
                }
            }
            @if (factPageAssoc != null)
            {
                <a class="bannerBtn factPage" id="factPage" href="@factPageAssocUrl"><img src="@factPageBtnIcon" class="bannerBtnIcon"><span class="bannerBtnStatement">@Html.Raw(factPageAssoc.GetPropertyValue<string>("statement"))<svg xmlns="http://www.w3.org/2000/svg" width="21.715" height="12" viewBox="0 0 21.715 12"><path class="arrowPath" d="M504.7,357.685c0-.015-.009-.029-.013-.044a.464.464,0,0,0-.016-.052.488.488,0,0,0-.026-.049c-.007-.013-.013-.027-.021-.04a.529.529,0,0,0-.065-.079l-5.483-5.483a.517.517,0,1,0-.731.731l4.6,4.6H483.51a.517.517,0,0,0,0,1.034h19.434l-4.6,4.6a.517.517,0,1,0,.731.731l5.483-5.483a.53.53,0,0,0,.065-.079c.009-.013.014-.026.021-.04a.491.491,0,0,0,.026-.049.466.466,0,0,0,.016-.052c0-.015.01-.029.013-.044A.514.514,0,0,0,504.7,357.685Z" transform="translate(-482.993 -351.786)" /></svg></span></a>
            }
            <span id="recipeMarker">
                <img src="~/images/icons/Icon_Recipe.svg" />
                <span class="markerLabel">@(Umbraco.Field("#Recipe"))</span>
                <span class="downArrow">&gt;</span>
            </span>
        </div>
        <div id="recipes">
            <div class="row no-gutters">
                <div class="col-sm-9 offset-sm-2">
                    <div class="wrapper">
                        @foreach (var recipe in recipes)
                        {
                            var stepCounter = 1;
                            var recipic = recipe.GetPropertyValue<IPublishedContent>("recipeImage");
                            var recipicUrl = "";

                            if (recipic != null)
                            {
                                recipicUrl = recipic.Url;
                            }

                            <div class="recipe">
                                <div class="row no-gutters">
                                    <div class="col-sm-6 order-2 order-sm-1">
                                        <div class="recipeContentLeft">
                                            
                                            <h3 class="recipeName">@(recipe.GetPropertyValue<string>("recipeName"))</h3>
                                            <p class="info">@(Umbraco.Field("#Preparation")) @(recipe.GetPropertyValue<string>("preparation")) / @(Umbraco.Field("#Cooking")) @(recipe.GetPropertyValue<string>("cooking"))</p>
                                            @if (!recipe.GetPropertyValue<string>("serving").IsNullOrWhiteSpace())
                                            {
                                                <p class="info">@(Umbraco.Field("#Serving")) @(recipe.GetPropertyValue<string>("serving")) </p>
                                            }

                                            @if (!recipe.GetPropertyValue<string>("author").IsNullOrWhiteSpace())
                                            {
                                                <p class="author">@(recipe.GetPropertyValue<string>("author"))</p>
                                            }
                                            <ul class="preparationSteps">
                                                @foreach (var step in recipe.GetPropertyValue<IEnumerable<IPublishedContent>>("preparationSteps"))
                                                {
                                                    <li>
                                                        <span class="ellipse">@stepCounter</span>
                                                        <div class="step">@(step.GetPropertyValue<HtmlString>("step"))</div>
                                                    </li>

                                                    stepCounter++;
                                                }
                                            </ul>
                                            @if (!recipe.GetPropertyValue<string>("tipsText").IsNullOrWhiteSpace())
                                            {
                                                var tipsPic = recipe.GetPropertyValue<IPublishedContent>("tipsPic");
                                                var tipsPicUrl = "";

                                                if (tipsPic != null)
                                                {
                                                    tipsPicUrl = tipsPic.Url;
                                                }
                                                <div class="tipsBox">
                                                    <div class="tipsIcon"></div>
                                                    <div class="tipsContent">
                                                        <div class="tipsText">@(recipe.GetPropertyValue<HtmlString>("tipsText"))</div>
                                                        @if (tipsPic != null)
                                                        {
                                                            <img class="tipsPic" src="@tipsPicUrl" />
                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-sm-6 order-1 order-sm-2">
                                        <div class="recipeContentRight">
                                            @if (recipeCounter == 1)
                                            {
                                                <div id="printAndShare">
                                                    <button id="print">
                                                        <span>@(Umbraco.Field("#Print"))</span>
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="22" height="20.291" viewBox="0 0 22 20.291"><g transform="translate(0 -9.633)"><path class="a" d="M20.448,14.322H17.984V10.3a.665.665,0,0,0-.665-.665H4.681a.665.665,0,0,0-.665.665v4.023H1.552A1.554,1.554,0,0,0,0,15.874v8.534A1.554,1.554,0,0,0,1.552,25.96H4.016v3.3a.665.665,0,0,0,.665.665H17.319a.665.665,0,0,0,.665-.665v-3.3h2.464A1.554,1.554,0,0,0,22,24.408V15.874A1.554,1.554,0,0,0,20.448,14.322Zm-15.1-3.358H16.653v3.358H5.347ZM16.653,28.594H5.347V22H16.653Zm4.016-4.186a.225.225,0,0,1-.222.222H17.984v-3.3a.665.665,0,0,0-.665-.665H4.681a.665.665,0,0,0-.665.665v3.3H1.552a.225.225,0,0,1-.222-.222V15.874a.225.225,0,0,1,.222-.222h18.9a.225.225,0,0,1,.222.222v8.534Z" transform="translate(0 0)" /><circle class="a" cx="0.967" cy="0.967" r="0.967" transform="translate(16.339 17.195)" /><path class="a" d="M89.27,163.822H83.087a.68.68,0,0,0,0,1.359H89.27a.68.68,0,0,0,0-1.359Z" transform="translate(-75.178 -140.535)" /><path class="a" d="M89.27,193.623H83.087a.68.68,0,0,0,0,1.359H89.27a.68.68,0,0,0,0-1.359Z" transform="translate(-75.178 -167.758)" /></g></svg>
                                                    </button>
                                                    <!-- AddToAny BEGIN -->
                                                    <a class="a2a_dd" id="share" href="https://www.addtoany.com/share">
                                                        <span>@(Umbraco.Field("#Share"))</span>
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="19.827" height="20" viewBox="0 0 19.827 20"><path class="a" d="M88.316,1612.711a3.609,3.609,0,0,0-2.844,1.4l-6.192-3.165a3.617,3.617,0,0,0,.138-.942,3.511,3.511,0,0,0-.164-1.022l6.16-3.152a3.846,3.846,0,1,0-.6-1.24l-6.187,3.165a3.645,3.645,0,1,0,.053,4.426l6.16,3.152a3.57,3.57,0,0,0-.168,1.026,3.644,3.644,0,1,0,3.644-3.644Z" transform="translate(-72.134 -1600)" /></svg>
                                                    </a>
                                                    <script>
                                                        var a2a_config = a2a_config || {};
                                                        a2a_config.onclick = 1;
                                                    </script>
                                                    <script async src="https://static.addtoany.com/menu/page.js"></script>
                                                    <!-- AddToAny END -->

                                                </div>
                                            }
                                            <img class="recipeImage" src="@recipicUrl" alt="@(recipe.GetPropertyValue<string>("recipeName"))" />
                                            <div class="ingredientsWrap">
                                                <h4 class="ingredientsTitle">@(Umbraco.Field("#Ingredients"))</h4>
                                                <ul class="ingredients">
                                                    @foreach (var ingredient in recipe.GetPropertyValue<IEnumerable<IPublishedContent>>("ingredients"))
                                                    {
                                                        <li>@(ingredient.GetPropertyValue<string>("ingredient"))</li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            recipeCounter++;
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="overlay"></div>
</section>